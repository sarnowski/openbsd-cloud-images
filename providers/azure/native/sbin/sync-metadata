#!/bin/sh

#
# https://docs.microsoft.com/en-us/azure/virtual-machines/linux/instance-metadata-service
# https://github.com/MicrosoftDocs/azure-docs/issues/30370
# https://docs.microsoft.com/en-us/azure/virtual-machines/linux/no-agent
#

_m=/etc/azure/metadata.json
_c=/etc/azure/metadata.conf
_u=/etc/userdata

# fetch json doc and convert into simple config
echo "synchronizing Azure metadata"
mkdir -p $(dirname $_m)
curl --silent --show-error -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2020-06-01&format=json" > $_m.tmp

_hostname=$(cat $_m.tmp | jq --raw-output .compute.name)
_location=$(cat $_m.tmp | jq --raw-output .compute.location)
_zone=$(cat $_m.tmp | jq --raw-output .compute.zone)
_vmid=$(cat $_m.tmp | jq --raw-output .compute.vmId)
_vmsize=$(cat $_m.tmp | jq --raw-output .compute.vmId)
_resourcegroupname=$(cat $_m.tmp | jq --raw-output .compute.resourceGroupName)
_resourceid=$(cat $_m.tmp | jq --raw-output .compute.resourceId)
_tags=$(cat $_m.tmp | jq --raw-output .compute.tags)
_privateIp=$(cat $_m.tmp | jq --raw-output '.network.interface[0].ipv4.ipAddress[0].privateIpAddress')
_publicIp=$(cat $_m.tmp | jq --raw-output '.network.interface[0].ipv4.ipAddress[0].publicIpAddress')

[ "$_publicIp" = "null" ] && _publicIp=""

cat > $_c.tmp << EOF
AZURE_HOSTNAME=$_hostname
AZURE_LOCATION=$_location
AZURE_ZONE=$_zone
AZURE_VM_ID=$_vmid
AZURE_VM_SIZE=$_vmsize
AZURE_RESOURCE_GROUP_NAME=$_resourcegroupname
AZURE_RESOURCE_ID=$_resourceid
AZURE_PRIVATE_IP=$_privateIp
AZURE_PUBLIC_IP=$_publicIp
EOF

mv $_m.tmp $_m
mv $_c.tmp $_c

echo
echo "metadata:"
cat $_c
echo
echo "tags:"
for _tag in $(list-tags); do
	echo "$_tag: $(get-tag-value-of $_tag)"
done
echo

echo "setting hostname to \"$_hostname\""
echo $_hostname > /etc/myname
hostname $_hostname

if [ -n "$_publicIp" ]; then
	echo "adding public IP $_publicIp to hvn0"
	ifconfig hvn0 inet alias $_publicIp netmask 255.255.255.255
fi
